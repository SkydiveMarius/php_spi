<?xml version="1.0"?>
<!DOCTYPE extension SYSTEM "../extension.dtd">
<extension name="spi" version="0.1.0">
    <summary>A PHP extension for accessing SPI</summary>
    <description>Wraps the low level ioctl calls needed to access the SPI, created mostly for the RaspberryPi but should work on other Unix like systems with SPI hardware.</description>
    <maintainers>
        <maintainer>
            <user>frak</user>
            <name>Michael Davey</name>
            <email>frak.off@gmail.com</email>
            <role>lead</role>
        </maintainer>
    </maintainers>
    <license>PHP</license>
    <release>
        <version>0.1.0</version>
        <date>2012-08-20</date>
        <state>alpha</state>
        <notes>API should now be stable</notes>
    </release>
    <changelog/>
    <constants>
        <constant name="SPI_MODE_0" type="int" value="0" />
        <constant name="SPI_MODE_1" type="int" value="0" />
        <constant name="SPI_MODE_2" type="int" value="0" />
        <constant name="SPI_MODE_3" type="int" value="0" />
        <constant name="SPI_CPOL" type="int" value="0" />
        <constant name="SPI_CPHA" type="int" value="0" />
    </constants>
    <class name="Spi">
        <property name="device" access="private" type="long" value="-1" />
        <property name="mode" access="private" type="long" value="0" />
        <property name="bits" access="private" type="long" value="8" />
        <property name="speed" access="private" type="long" value="1000000" />
        <property name="delay" access="private" type="long" value="0" />
        <function access="public" name="__construct">
            <proto>void __construct(int bus, int chipselect[, array options])</proto>
        </function>
        <function access="public" name="__destruct">
            <proto>void __destruct()</proto>
        </function>
        <function access="public" name="transfer">
            <proto>array transfer(array data)</proto>
        </function>
        <function access="public" name="blockTransfer">
            <proto>mixed blockTransfer(array data[, int delay[, bool discard]])</proto>
        </function>
        <function access="public" name="setupTimer">
            <proto>bool setupTimer(void)</proto>
        </function>
        <function access="public" name="usecDelay">
            <proto>void usecDelay(int delay)</proto>
        </function>
    </class>
</extension>
